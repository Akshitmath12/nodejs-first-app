// ********RoostGPT********
// Test generated by RoostGPT for test NodeRepo using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
import express from "express";
import path from "path";
import mongoose from "mongoose";
import cookieParser from "cookie-parser";
import jwt from "jsonwebtoken";
import bcrypt from "bcrypt";
import request from 'supertest';
import app from './index';

jest.mock('./index');

describe('GET /', () => {
  beforeEach(() => {
    isAuthenticated.mockClear();
  });

  it('should render the logout page with user name if the user is authenticated', async () => {
    const mockUser = { name: 'John Doe' };

    isAuthenticated.mockImplementationOnce((req, res, next) => {
      req.user = mockUser;
      next();
    });

    const response = await request(app).get('/');

    expect(response.status).toBe(200);
    expect(response.text).toContain('John Doe');
  });

  it('should return a 401 error if the user is not authenticated', async () => {
    isAuthenticated.mockImplementationOnce((req, res, next) => {
      const err = new Error('Unauthorized');
      err.status = 401;
      next(err);
    });

    const response = await request(app).get('/');

    expect(response.status).toBe(401);
    expect(response.text).toContain('Unauthorized');
  });
});
