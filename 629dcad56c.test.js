// ********RoostGPT********
// Test generated by RoostGPT for test NodeRepo using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
import mongoose from 'mongoose';
import { MongoMemoryServer } from 'mongodb-memory-server';

let mongoServer;
const opts = { useUnifiedTopology: true, useNewUrlParser: true };

// Jest hooks to set up and tear down MongoDB Memory Server
beforeAll(async () => {
  mongoServer = new MongoMemoryServer();
  const mongoUri = await mongoServer.getUri();
  await mongoose.connect(mongoUri, opts, (err) => {
    if (err) console.error(err);
  });
});

afterAll(async () => {
  await mongoose.disconnect();
  await mongoServer.stop();
});

describe('MongoDB Connection', () => {
  test('should connect to in-memory MongoDB', async () => {
    const isConnectedBefore = mongoose.connection.readyState;
    expect(isConnectedBefore).toBe(1);

    await mongoose.disconnect();
    const isDisconnected = mongoose.connection.readyState;
    expect(isDisconnected).toBe(0);

    await mongoose.connect(await mongoServer.getUri(), opts);
    const isConnectedAfter = mongoose.connection.readyState;
    expect(isConnectedAfter).toBe(1);
  });

  test('should not connect to in-memory MongoDB with wrong uri', async () => {
    const wrongMongoUri = 'mongodb://wrong-uri:1234/wrong-db';
    try {
      await mongoose.connect(wrongMongoUri, opts);
    } catch (error) {
      expect(error).toBeInstanceOf(mongoose.Error);
    }
  });
});
