// ********RoostGPT********
// Test generated by RoostGPT for test NodeRepo using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
const features = require('./features');

describe('Love Percent Generator', () => {
  let originalMathRandom;

  beforeAll(() => {
    originalMathRandom = Math.random;
  });

  afterEach(() => {
    Math.random = originalMathRandom;
  });

  test('should return a string ending with %', () => {
    Math.random = jest.fn().mockReturnValue(0.5);
    const lovePercent = features.generateLovePercent();
    expect(typeof lovePercent).toBe('string');
    expect(lovePercent.endsWith('%')).toBe(true);
  });

  test('should return a string with a numeric value between 0 and 99', () => {
    Math.random = jest.fn().mockReturnValue(0.5);
    const lovePercent = features.generateLovePercent();
    const numericValue = parseInt(lovePercent, 10);
    expect(numericValue).toBeGreaterThanOrEqual(0);
    expect(numericValue).toBeLessThanOrEqual(99);
  });

  test('should return 0% when Math.random returns 0', () => {
    Math.random = jest.fn().mockReturnValue(0);
    const lovePercent = features.generateLovePercent();
    expect(lovePercent).toBe('0%');
  });

  test('should return 99% when Math.random returns 0.9999999999', () => {
    Math.random = jest.fn().mockReturnValue(0.9999999999);
    const lovePercent = features.generateLovePercent();
    expect(lovePercent).toBe('99%');
  });
});
